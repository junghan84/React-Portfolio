{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JungHan Seo\\\\desktop\\\\UW_BootsCamp_2022\\\\Challenge\\\\React-Portfolio\\\\src\\\\components\\\\pages\\\\Contact.js\";\nimport React, { useState } from 'react';\nimport { validateEmail } from '../../utils/helpers';\n\n//This component returns the div that contains all of the content for the Contact portion of the site.\nconst Contact = () => {\n  const [formState, setFormState] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const [errorMessage, setErrorMessage] = useState('');\n  const {\n    name,\n    email,\n    message\n  } = formState;\n\n  //This function validates the data entered into the contact form. The name and message inputs it only verifies that the field\n  //is not empty. The email field has more validation using the validateEmail function in helpers.js to verify that a valid email\n  //address has been entered.\n  function handleChange(e) {\n    if (e.target.name === 'email') {\n      const isValid = validateEmail(e.target.value);\n      console.log(isValid);\n      if (!isValid) {\n        setErrorMessage('Your email is invalid.');\n      } else {\n        setErrorMessage('');\n      }\n    } else {\n      if (!e.target.value.length) {\n        setErrorMessage(`${e.target.name} is required.`);\n      } else {\n        setErrorMessage('');\n      }\n    }\n    if (!errorMessage) {\n      setFormState({\n        ...formState,\n        [e.target.name]: e.target.value\n      });\n    }\n  }\n  ;\n\n  //Since the site is front-end only right now, the submit button only logs the values from the inputs. This is where additional\n  //handling would go to submit the form datat to the back-end.\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log(formState);\n  }\n  ;\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Contact Me\"), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"contact-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    defaultValue: name,\n    onBlur: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Email address:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    defaultValue: email,\n    onBlur: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Message:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"message\",\n    rows: \"10\",\n    defaultValue: message,\n    onBlur: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })), errorMessage && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, errorMessage)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Submit\")));\n};\nexport default Contact;","map":{"version":3,"names":["React","useState","validateEmail","Contact","formState","setFormState","name","email","message","errorMessage","setErrorMessage","handleChange","e","target","isValid","value","console","log","length","handleSubmit","preventDefault"],"sources":["C:/Users/JungHan Seo/desktop/UW_BootsCamp_2022/Challenge/React-Portfolio/src/components/pages/Contact.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {validateEmail} from '../../utils/helpers';\n\n\n//This component returns the div that contains all of the content for the Contact portion of the site.\nconst Contact = () => {\n\n    const [formState, setFormState] = useState({name: '', email: '', message: ''});\n    const [errorMessage, setErrorMessage] = useState('');\n    const {name, email, message} = formState;\n\n    //This function validates the data entered into the contact form. The name and message inputs it only verifies that the field\n    //is not empty. The email field has more validation using the validateEmail function in helpers.js to verify that a valid email\n    //address has been entered.\n    function handleChange(e) {\n        if (e.target.name === 'email') {\n            const isValid = validateEmail(e.target.value);\n            console.log(isValid);\n            if(!isValid){\n                setErrorMessage('Your email is invalid.');\n            } else {\n                setErrorMessage('');\n            }\n        } else {\n            if (!e.target.value.length){\n                setErrorMessage(`${e.target.name} is required.`);\n            } else {\n                setErrorMessage('');\n            }\n        }\n        if(!errorMessage) {\n            setFormState({...formState, [e.target.name]: e.target.value});\n        }\n    };\n\n    //Since the site is front-end only right now, the submit button only logs the values from the inputs. This is where additional\n    //handling would go to submit the form datat to the back-end.\n    function handleSubmit(e) {\n        e.preventDefault();\n        console.log(formState);\n    };\n\n    return (\n        <section>\n            <h2 className=\"section-header\">Contact Me</h2>\n            <form id=\"contact-form\" onSubmit={handleSubmit}>\n            <div>\n                <label htmlFor=\"name\">Name:</label>\n                <input type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange} />\n            </div>\n            <div>\n                <label htmlFor=\"email\">Email address:</label>\n                <input type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange} />\n            </div>\n            <div>\n                <label htmlFor=\"message\">Message:</label>\n                <textarea name=\"message\" rows=\"10\" defaultValue={message} onBlur={handleChange} />\n            </div>\n            {errorMessage && (\n                <div>\n                    <p className=\"error-text\">{errorMessage}</p>\n                </div>\n            )}\n            <button type=\"submit\">Submit</button>\n            </form>\n        </section>\n    );\n}\n\nexport default Contact;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,aAAa,QAAO,qBAAqB;;AAGjD;AACA,MAAMC,OAAO,GAAG,MAAM;EAElB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC;IAACK,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAE,CAAC,CAAC;EAC9E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM;IAACK,IAAI;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGJ,SAAS;;EAExC;EACA;EACA;EACA,SAASO,YAAY,CAACC,CAAC,EAAE;IACrB,IAAIA,CAAC,CAACC,MAAM,CAACP,IAAI,KAAK,OAAO,EAAE;MAC3B,MAAMQ,OAAO,GAAGZ,aAAa,CAACU,CAAC,CAACC,MAAM,CAACE,KAAK,CAAC;MAC7CC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;MACpB,IAAG,CAACA,OAAO,EAAC;QACRJ,eAAe,CAAC,wBAAwB,CAAC;MAC7C,CAAC,MAAM;QACHA,eAAe,CAAC,EAAE,CAAC;MACvB;IACJ,CAAC,MAAM;MACH,IAAI,CAACE,CAAC,CAACC,MAAM,CAACE,KAAK,CAACG,MAAM,EAAC;QACvBR,eAAe,CAAE,GAAEE,CAAC,CAACC,MAAM,CAACP,IAAK,eAAc,CAAC;MACpD,CAAC,MAAM;QACHI,eAAe,CAAC,EAAE,CAAC;MACvB;IACJ;IACA,IAAG,CAACD,YAAY,EAAE;MACdJ,YAAY,CAAC;QAAC,GAAGD,SAAS;QAAE,CAACQ,CAAC,CAACC,MAAM,CAACP,IAAI,GAAGM,CAAC,CAACC,MAAM,CAACE;MAAK,CAAC,CAAC;IACjE;EACJ;EAAC;;EAED;EACA;EACA,SAASI,YAAY,CAACP,CAAC,EAAE;IACrBA,CAAC,CAACQ,cAAc,EAAE;IAClBJ,OAAO,CAACC,GAAG,CAACb,SAAS,CAAC;EAC1B;EAAC;EAED,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAI,SAAS,EAAC,gBAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAgB,eAC9C;IAAM,EAAE,EAAC,cAAc;IAAC,QAAQ,EAAEe,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC/C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,OAAO,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAAc,eACnC;IAAO,IAAI,EAAC,MAAM;IAAC,IAAI,EAAC,MAAM;IAAC,YAAY,EAAEb,IAAK;IAAC,MAAM,EAAEK,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACzE,eACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,OAAO,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,oBAAuB,eAC7C;IAAO,IAAI,EAAC,OAAO;IAAC,IAAI,EAAC,OAAO;IAAC,YAAY,EAAEJ,KAAM;IAAC,MAAM,EAAEI,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAC5E,eACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,OAAO,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cAAiB,eACzC;IAAU,IAAI,EAAC,SAAS;IAAC,IAAI,EAAC,IAAI;IAAC,YAAY,EAAEH,OAAQ;IAAC,MAAM,EAAEG,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAChF,EACLF,YAAY,iBACT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAG,SAAS,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEA,YAAY,CAAK,CAEnD,eACD;IAAQ,IAAI,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAAgB,CAC9B,CACD;AAElB,CAAC;AAED,eAAeN,OAAO"},"metadata":{},"sourceType":"module"}