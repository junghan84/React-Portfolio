{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\JungHan Seo\\\\Desktop\\\\UW_BootsCamp_2022\\\\Challenge\\\\React-Portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\JungHan Seo\\\\Desktop\\\\UW_BootsCamp_2022\\\\Challenge\\\\React-Portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\JungHan Seo\\\\Desktop\\\\UW_BootsCamp_2022\\\\Challenge\\\\React-Portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{validateEmail}from'../../utils/helpers';//This component returns the div that contains all of the content for the Contact portion of the site.\nvar Contact=function Contact(){var _useState=useState({name:'',email:'',message:''}),_useState2=_slicedToArray(_useState,2),formState=_useState2[0],setFormState=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),errorMessage=_useState4[0],setErrorMessage=_useState4[1];var name=formState.name,email=formState.email,message=formState.message;//This function validates the data entered into the contact form. The name and message inputs it only verifies that the field\n//is not empty. The email field has more validation using the validateEmail function in helpers.js to verify that a valid email\n//address has been entered.\nfunction handleChange(e){if(e.target.name==='email'){var isValid=validateEmail(e.target.value);console.log(isValid);if(!isValid){setErrorMessage('Your email is invalid.');}else{setErrorMessage('');}}else{if(!e.target.value.length){setErrorMessage(\"\".concat(e.target.name,\" is required.\"));}else{setErrorMessage('');}}if(!errorMessage){setFormState(_objectSpread(_objectSpread({},formState),{},_defineProperty({},e.target.name,e.target.value)));}};//Since the site is front-end only right now, the submit button only logs the values from the inputs. This is where additional\n//handling would go to submit the form datat to the back-end.\nfunction handleSubmit(e){e.preventDefault();console.log(formState);};return/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"h2\",{className:\"section-header\"},\"Contact Me\"),/*#__PURE__*/React.createElement(\"form\",{id:\"contact-form\",onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"name\"},\"Name:\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"name\",defaultValue:name,onBlur:handleChange})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\"},\"Email address:\"),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",name:\"email\",defaultValue:email,onBlur:handleChange})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"message\"},\"Message:\"),/*#__PURE__*/React.createElement(\"textarea\",{name:\"message\",rows:\"10\",defaultValue:message,onBlur:handleChange})),errorMessage&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",{className:\"error-text\"},errorMessage)),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Submit\")));};export default Contact;","map":{"version":3,"names":["React","useState","validateEmail","Contact","name","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","e","target","isValid","value","console","log","length","handleSubmit","preventDefault"],"sources":["C:/Users/JungHan Seo/Desktop/UW_BootsCamp_2022/Challenge/React-Portfolio/src/components/pages/Contact.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {validateEmail} from '../../utils/helpers';\n\n\n//This component returns the div that contains all of the content for the Contact portion of the site.\nconst Contact = () => {\n\n    const [formState, setFormState] = useState({name: '', email: '', message: ''});\n    const [errorMessage, setErrorMessage] = useState('');\n    const {name, email, message} = formState;\n\n    //This function validates the data entered into the contact form. The name and message inputs it only verifies that the field\n    //is not empty. The email field has more validation using the validateEmail function in helpers.js to verify that a valid email\n    //address has been entered.\n    function handleChange(e) {\n        if (e.target.name === 'email') {\n            const isValid = validateEmail(e.target.value);\n            console.log(isValid);\n            if(!isValid){\n                setErrorMessage('Your email is invalid.');\n            } else {\n                setErrorMessage('');\n            }\n        } else {\n            if (!e.target.value.length){\n                setErrorMessage(`${e.target.name} is required.`);\n            } else {\n                setErrorMessage('');\n            }\n        }\n        if(!errorMessage) {\n            setFormState({...formState, [e.target.name]: e.target.value});\n        }\n    };\n\n    //Since the site is front-end only right now, the submit button only logs the values from the inputs. This is where additional\n    //handling would go to submit the form datat to the back-end.\n    function handleSubmit(e) {\n        e.preventDefault();\n        console.log(formState);\n    };\n\n    return (\n        <section>\n            <h2 className=\"section-header\">Contact Me</h2>\n            <form id=\"contact-form\" onSubmit={handleSubmit}>\n            <div>\n                <label htmlFor=\"name\">Name:</label>\n                <input type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange} />\n            </div>\n            <div>\n                <label htmlFor=\"email\">Email address:</label>\n                <input type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange} />\n            </div>\n            <div>\n                <label htmlFor=\"message\">Message:</label>\n                <textarea name=\"message\" rows=\"10\" defaultValue={message} onBlur={handleChange} />\n            </div>\n            {errorMessage && (\n                <div>\n                    <p className=\"error-text\">{errorMessage}</p>\n                </div>\n            )}\n            <button type=\"submit\">Submit</button>\n            </form>\n        </section>\n    );\n}\n\nexport default Contact;"],"mappings":"+lBAAA,MAAOA,MAAK,EAAGC,QAAQ,KAAO,OAAO,CACrC,OAAQC,aAAa,KAAO,qBAAqB,CAGjD;AACA,GAAMC,QAAO,CAAG,QAAVA,QAAO,EAAS,CAElB,cAAkCF,QAAQ,CAAC,CAACG,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,OAAO,CAAE,EAAE,CAAC,CAAC,wCAAvEC,SAAS,eAAEC,YAAY,eAC9B,eAAwCP,QAAQ,CAAC,EAAE,CAAC,yCAA7CQ,YAAY,eAAEC,eAAe,eACpC,GAAON,KAAI,CAAoBG,SAAS,CAAjCH,IAAI,CAAEC,KAAK,CAAaE,SAAS,CAA3BF,KAAK,CAAEC,OAAO,CAAIC,SAAS,CAApBD,OAAO,CAE3B;AACA;AACA;AACA,QAASK,aAAY,CAACC,CAAC,CAAE,CACrB,GAAIA,CAAC,CAACC,MAAM,CAACT,IAAI,GAAK,OAAO,CAAE,CAC3B,GAAMU,QAAO,CAAGZ,aAAa,CAACU,CAAC,CAACC,MAAM,CAACE,KAAK,CAAC,CAC7CC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC,CACpB,GAAG,CAACA,OAAO,CAAC,CACRJ,eAAe,CAAC,wBAAwB,CAAC,CAC7C,CAAC,IAAM,CACHA,eAAe,CAAC,EAAE,CAAC,CACvB,CACJ,CAAC,IAAM,CACH,GAAI,CAACE,CAAC,CAACC,MAAM,CAACE,KAAK,CAACG,MAAM,CAAC,CACvBR,eAAe,WAAIE,CAAC,CAACC,MAAM,CAACT,IAAI,kBAAgB,CACpD,CAAC,IAAM,CACHM,eAAe,CAAC,EAAE,CAAC,CACvB,CACJ,CACA,GAAG,CAACD,YAAY,CAAE,CACdD,YAAY,gCAAKD,SAAS,wBAAGK,CAAC,CAACC,MAAM,CAACT,IAAI,CAAGQ,CAAC,CAACC,MAAM,CAACE,KAAK,GAAE,CACjE,CACJ,CAAC,CAED;AACA;AACA,QAASI,aAAY,CAACP,CAAC,CAAE,CACrBA,CAAC,CAACQ,cAAc,EAAE,CAClBJ,OAAO,CAACC,GAAG,CAACV,SAAS,CAAC,CAC1B,CAAC,CAED,mBACI,gDACI,0BAAI,SAAS,CAAC,gBAAgB,eAAgB,cAC9C,4BAAM,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAEY,YAAa,eAC/C,4CACI,6BAAO,OAAO,CAAC,MAAM,UAAc,cACnC,6BAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAEf,IAAK,CAAC,MAAM,CAAEO,YAAa,EAAG,CACzE,cACN,4CACI,6BAAO,OAAO,CAAC,OAAO,mBAAuB,cAC7C,6BAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAEN,KAAM,CAAC,MAAM,CAAEM,YAAa,EAAG,CAC5E,cACN,4CACI,6BAAO,OAAO,CAAC,SAAS,aAAiB,cACzC,gCAAU,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAEL,OAAQ,CAAC,MAAM,CAAEK,YAAa,EAAG,CAChF,CACLF,YAAY,eACT,4CACI,yBAAG,SAAS,CAAC,YAAY,EAAEA,YAAY,CAAK,CAEnD,cACD,8BAAQ,IAAI,CAAC,QAAQ,WAAgB,CAC9B,CACD,CAElB,CAAC,CAED,cAAeN,QAAO"},"metadata":{},"sourceType":"module"}